  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
 
<title> 2A1B Exception </title>

             
			 
 
			 
			 
			 
			 
			 
			 
			 
			 
			 
			<link rel="stylesheet" type="text/css" href="../tstudio.css">

 
 


</head>

<body>
 

<P>
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><P><B>2A1B
</B></TD><TD><P><I>Instruction Stream Not Valid
</I>
<P>
The object was not created because the sequence of instruction stream
objects is not valid.
<P>
<I>Information Passed:</I>
<BR>
<TABLE>
<TR>
<TH ALIGN="CENTER" VALIGN="TOP" COLSPAN="2">Offset
</TH><TH ALIGN="CENTER" VALIGN="TOP" COLSPAN="12"><BR></TH></TR><TR>
<TH ALIGN="RIGHT" VALIGN="TOP">Dec
</TH><TH ALIGN="RIGHT" VALIGN="TOP">Hex
</TH><TH ALIGN="LEFT" VALIGN="TOP">
<BR></TH><TH ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Field Name
</TH><TH ALIGN="LEFT" VALIGN="TOP">
<BR></TH><TH ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Data Type and Length
</TH></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">0
</TD><TD ALIGN="RIGHT" VALIGN="TOP">0
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Reason code
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT> 1 </TT>
</TD><TD>Undefined MI operation code.
</TD></TR><TR VALIGN="TOP"><TD><TT> 2 </TT>
</TD><TD>Invalid type table index.
</TD></TR><TR VALIGN="TOP"><TD><TT> 3 </TT>
</TD><TD>Invalid dictionary number.
</TD></TR><TR VALIGN="TOP"><TD><TT> 4 </TT>
</TD><TD>Invalid label identifier.
</TD></TR><TR VALIGN="TOP"><TD><TT> 5 </TT>
</TD><TD>One or more instructions are out of sequence.
Typically signaled when the first instruction in a procedure is not ENT.
</TD></TR><TR VALIGN="TOP"><TD><TT> 6 </TT>
</TD><TD>The dictionary id on the END instruction does not match the
dictionary id on first ENT instruction in the current procedure.
</TD></TR><TR VALIGN="TOP"><TD><TT> 7 </TT>
</TD><TD>An operand of an MI instruction has an invalid value.
</TD></TR><TR VALIGN="TOP"><TD><TT> 8 </TT>
</TD><TD>The data type of the stack operand(s) is invalid for the operation
being attempted.
</TD></TR><TR VALIGN="TOP"><TD><TT> 9 </TT>
</TD><TD>The length of the stack operand(s) is invalid for the operation
being attempted.
</TD></TR><TR VALIGN="TOP"><TD><TT>10 </TT>
</TD><TD>An operand of a load instruction has an invalid data type.
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT>11 </TT>
</TD><TD>An object which is loaded has scope greater than the current
procedure's scope.
</TD></TR><TR VALIGN="TOP"><TD><TT>12 </TT>
</TD><TD>The target of a STR operation in the bound program instruction stream
is not a variable, or the target is a register variable and either offset
or typeNo are nonzero.
</TD></TR><TR VALIGN="TOP"><TD><TT>13 </TT>
</TD><TD>The MI value stack is not empty at a label, jump, or other point in
the instruction stream at which the MI architecture asserts it must.
</TD></TR><TR VALIGN="TOP"><TD><TT>14 </TT>
</TD><TD>The MI value stack has fewer items on it than need to be popped.
</TD></TR><TR VALIGN="TOP"><TD><TT>15 </TT>
</TD><TD>The values retrieved from the MI value stack are not compatible.
</TD></TR><TR VALIGN="TOP"><TD><TT>16 </TT>
</TD><TD>The data type of the stack operands is invalid for the comparison
being attempted, (i.e.  UNORD on binary dt).
</TD></TR><TR VALIGN="TOP"><TD><TT>17 </TT>
</TD><TD>There is control flow in the bound program which reaches either a
secondary entry point or an END instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>18 </TT>
</TD><TD>No exception handlers are currently enabled when a DHNDLR is
encountered.
</TD></TR><TR VALIGN="TOP"><TD><TT>19 </TT>
</TD><TD>A DHNDLR instruction specifies an exception handler that was not the
last one enabled.
</TD></TR><TR VALIGN="TOP"><TD><TT>20 </TT>
</TD><TD>A LAB instruction was encountered where the label qualifier was not
one of:  FwdOnlyLabel (1) or GeneralLabel (2).
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT>21 </TT>
</TD><TD>An object in the dictionary with the "is_reg" attribute lacks one or
more of the required characteristics for inclusion in the machine
storage class.  For example, the dictionary object is the target of a
LDA operation, or the dictionary object has its data type or length
superseded with a type table entry on a load or store operation.
</TD></TR><TR VALIGN="TOP"><TD><TT>22 </TT>
</TD><TD>A blocked built-in function is called.
</TD></TR><TR VALIGN="TOP"><TD><TT>23 </TT>
</TD><TD>An invalid built-in function number in CALLBI instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>24 </TT>
</TD><TD>An invalid alias union id in PALI instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>25 </TT>
</TD><TD>An invalid pali flag in PALI instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>26 </TT>
</TD><TD>A switch-specific operation (i.e.  CASE, DEFAULT, BRK, ENDS) was
encountered outside of a SWE-ENDS block.
</TD></TR><TR VALIGN="TOP"><TD><TT>27 </TT>
</TD><TD>Two CASE ranges were found with one or more elements in common,
violating the requirement that all CASE ranges be totally disjoint.
</TD></TR><TR VALIGN="TOP"><TD><TT>28 </TT>
</TD><TD>The low selector value for the range of a CASE statement is greater
than the high selector value.
</TD></TR><TR VALIGN="TOP"><TD><TT>29 </TT>
</TD><TD>A second DEFAULT case was found for a switch statement in the
instruction stream.
</TD></TR><TR VALIGN="TOP"><TD><TT>30 </TT>
</TD><TD>Built-in OPMPARMADDR or OPMPARMCNT is not invoked from PEP.
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT>31 </TT>
</TD><TD>A required built-in function argument was not specified.
</TD></TR><TR VALIGN="TOP"><TD><TT>35 </TT>
</TD><TD>The number of arguments specified for a built-in function is
incorrect.
</TD></TR><TR VALIGN="TOP"><TD><TT>36 </TT>
</TD><TD>The null op mask specifies an argument that is not valid.
</TD></TR><TR VALIGN="TOP"><TD><TT>37 </TT>
</TD><TD>A switch statement is still active (i.e.  the ENDS operation for an
open switch has not been encountered) at the END of a procedure.
</TD></TR><TR VALIGN="TOP"><TD><TT>38 </TT>
</TD><TD>All three labels on a MiCMPB operation were found to equal zero.
</TD></TR><TR VALIGN="TOP"><TD><TT>39 </TT>
</TD><TD>Built-in function NPMPARMLISTADDR was invoked from PEP.
</TD></TR><TR VALIGN="TOP"><TD><TT>40 </TT>
</TD><TD>A label that was the target of a jump (FJP,TJP,CMPB,UJP) was not
found in the instruction stream.
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT>41 </TT>
</TD><TD>A label that is in the dictionary, and that is indicated therein to
have had its address taken, was not found in the instruction stream.
</TD></TR><TR VALIGN="TOP"><TD><TT>42 </TT>
</TD><TD>A label constant on the stack when IJMP was encountered was now
owned by the current procedure being translated.
</TD></TR><TR VALIGN="TOP"><TD><TT>43 </TT>
</TD><TD>A data object which has been allocated to a machine storage class is
the target of a LDA instruction, has its address referenced from the
initialization component, or is used as an exception handler
communication area.  This situation can occur if the front end did not
set the addr_taken flag for the data object (or for the data object's
owner if it is the member of a aggregate).
</TD></TR><TR VALIGN="TOP"><TD><TT>44 </TT>
</TD><TD>An item loaded on the stack which can be validated at translate time
has an invalid value.
</TD></TR><TR VALIGN="TOP"><TD><TT>45 </TT>
</TD><TD>Procedures in the instruction stream are out of order.  When a
module contains nested procedures, there is a requirement that before
procedure 'x' is translated all of the lexically enclosing parents of
procedure 'x' be translated.
</TD></TR><TR VALIGN="TOP"><TD><TT>46 </TT>
</TD><TD>A data object which is referenced from a nested procedure doesn't
have the Nested Use attribute set.
</TD></TR><TR VALIGN="TOP"><TD><TT>47 </TT>
</TD><TD>No exception handlers were defined in a procedure that requires one,
for instruction INITEHCA, e.g..
</TD></TR><TR VALIGN="TOP"><TD><TT>48 </TT>
</TD><TD>A RSTSCA instruction was found in the instruction stream without
a corresponding SAVSETCA instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>49 </TT>
</TD><TD>Multiple RSTSCA instructions encountered in the instruction
stream before a statement boundary.
</TD></TR><TR VALIGN="TOP"><TD><TT>50 </TT>
</TD><TD>Multiple SAVSETCA instructions encountered in the instruction
stream before a statement boundary.
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TR>
<TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="RIGHT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><TT>51 </TT>
</TD><TD>A SAVSETCA instruction was found in the instruction stream
without a corresponding RSTSCA instruction.
</TD></TR><TR VALIGN="TOP"><TD><TT>52 </TT>
</TD><TD>Implicit exception boundary flag not set for machine operation.
</TD></TR><TR VALIGN="TOP"><TD><TT>53 </TT>
</TD><TD>An OPM monitor was defined but never enabled in the module.
</TD></TR><TR VALIGN="TOP"><TD><TT>54 </TT>
</TD><TD>Data type and length in the function prototype component is
not compatible with the data type and length of a parameter defined
by a PSTR or the argument on a call bound procedure operation.
</TD></TR><TR VALIGN="TOP"><TD><TT>55 </TT>
</TD><TD>The number of parameters in the function prototype component
is not equal to the number of parameters defined by PSTRs or the
number of arguments on a call bound procedure operation.
</TD></TR></TABLE>
</TD><TD ALIGN="LEFT" VALIGN="TOP"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><BR></TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">4
</TD><TD ALIGN="RIGHT" VALIGN="TOP">4
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Current instruction count
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">8
</TD><TD ALIGN="RIGHT" VALIGN="TOP">8
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Data offset
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">12
</TD><TD ALIGN="RIGHT" VALIGN="TOP">C
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Current instruction offset
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">16
</TD><TD ALIGN="RIGHT" VALIGN="TOP">10
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Current instruction opcode
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">20
</TD><TD ALIGN="RIGHT" VALIGN="TOP">14
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Current statement number
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">UBin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">24
</TD><TD ALIGN="RIGHT" VALIGN="TOP">18
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Machine log note ID
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Char(8)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">32
</TD><TD ALIGN="RIGHT" VALIGN="TOP">20
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Reserved
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Char(8)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">40
</TD><TD ALIGN="RIGHT" VALIGN="TOP">28
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">--- End ---
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<BR></TD></TR></TABLE>
<P>
<I>Instructions Causing Exception:</I>
<UL COMPACT>
</UL>
</TD></TR></TABLE>

 
</body>

 
</HTML>
