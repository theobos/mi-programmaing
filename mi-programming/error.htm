<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>
<title>Error code parameter</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" type="text/css" href="tstudio.css">
</head>
<body>

<a name="Top"></a> 

<h2><a name="hdrerrcod">Error code parameter</a></h2>

<p>An API error code parameter is common to all of the system APIs.</p>

<p><strong>Notes:</strong></p>

<ol>
<li>The ILE CEE APIs use feedback codes and conditions. See <i>OS/400 Messages and the ILE CEE API Feedback Code</i>
in the ILE CEE APIs for information about how feedback codes are used with the ILE CEE
APIs.<br>
<br>
</li>

<li>The UNIX-type APIs and the National Language Data Conversion APIs use <em>
errno</em> to report error conditions.</li>
</ol>

<p>For additional information on the error code parameter, see:</p>

<ul>
<li><a href="#HDRERRC01">Format ERRC0100</a></li>

<li><a href="#HDRERRC02">Format ERRC0200</a></li>

<li><a href="#Header_41">Field descriptions</a></li>
</ul>

<p>Most iSeries APIs include an error code parameter to return error codes and
exception data to the application. The error code parameter is a
variable-length structure that contains the information associated with an
error condition. The error code parameter can be one of two variable-length
structures, format ERRC0100 or format ERRC0200.</p>

<p>In format ERRC0100, one field in that structure is an INPUT field; it
controls whether an exception is returned to the application or the error code
structure is filled in with the exception information. When the bytes provided
field is greater than or equal to 8, the rest of the error code structure is
filled in with the OUTPUT exception information associated with the error. When
the bytes provided INPUT field is zero, all other fields are ignored and an
exception is returned.</p>

<p>Format ERRC0200 must be used if the API caller wants convertible character
(CCHAR) support. Format ERRC0200 contains two INPUT fields. The first field,
called the key field, must contain a -1 to use CCHAR support. When the bytes
provided field is greater than or equal to 12, the rest of the error code
structure is filled in with the OUTPUT exception information associated with
the error. When the bytes provided INPUT field is zero, all other fields are
ignored and an exception is returned.</p>

<p>For some APIs, the error code parameter is optional. If you do not code the
optional error code parameter, the API returns diagnostic and escape messages.
If you do code the optional error code parameter, the API returns only escape
messages or error codes; it never returns diagnostic messages.</p>

<p>The structure of the error code parameter is as follows. The fields are
described in detail after the tables.</p>

<p><strong>Note:</strong> The error code structures for both formats are
provided in the QUSEC include file in the QSYSINC library. Includes exist in
the following source physical files: QRPGSRC, QRPGLESRC, QLBLSRC, QCBLLESRC,
and H.</p>

<br>
 

<h3><a name="HDRERRC01">Format ERRC0100</a></h3>

<table border width="80%">
<tr>
<th align="center" valign="bottom" colspan="2">Offset</th>
<th align="left" valign="bottom" rowspan="2">Use</th>
<th align="left" valign="bottom" rowspan="2">Type</th>
<th align="left" valign="bottom" rowspan="2">Field</th>
</tr>

<tr>
<th align="left" valign="bottom">Dec</th>
<th align="left" valign="bottom">Hex</th>
</tr>

<tr>
<td align="center" valign="top">0</td>
<td align="center" valign="top">0</td>
<td align="left" valign="top">INPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Bytes provided</td>
</tr>

<tr>
<td align="center" valign="top">4</td>
<td align="center" valign="top">4</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Bytes available</td>
</tr>

<tr>
<td align="center" valign="top">8</td>
<td align="center" valign="top">8</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(7)</td>
<td align="left" valign="top">Exception ID</td>
</tr>

<tr>
<td align="center" valign="top">15</td>
<td align="center" valign="top">F</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(1)</td>
<td align="left" valign="top">Reserved</td>
</tr>

<tr>
<td align="center" valign="top">16</td>
<td align="center" valign="top">10</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(*)</td>
<td align="left" valign="top">Exception data</td>
</tr>
</table>

<br>
<br>
 

<h3><a name="HDRERRC02">Format ERRC0200</a></h3>

<table border width="80%">
<tr>
<th align="center" valign="bottom" colspan="2">Offset</th>
<th align="left" valign="bottom" rowspan="2">Use</th>
<th align="left" valign="bottom" rowspan="2">Type</th>
<th align="left" valign="bottom" rowspan="2">Field</th>
</tr>

<tr>
<th align="left" valign="bottom">Dec</th>
<th align="left" valign="bottom">Hex</th>
</tr>

<tr>
<td align="center" valign="top">0</td>
<td align="center" valign="top">0</td>
<td align="left" valign="top">INPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Key</td>
</tr>

<tr>
<td align="center" valign="top">4</td>
<td align="center" valign="top">4</td>
<td align="left" valign="top">INPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Bytes provided</td>
</tr>

<tr>
<td align="center" valign="top">8</td>
<td align="center" valign="top">8</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Bytes available</td>
</tr>

<tr>
<td align="center" valign="top">12</td>
<td align="center" valign="top">C</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(7)</td>
<td align="left" valign="top">Exception ID</td>
</tr>

<tr>
<td align="center" valign="top">19</td>
<td align="center" valign="top">13</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(1)</td>
<td align="left" valign="top">Reserved</td>
</tr>

<tr>
<td align="center" valign="top">20</td>
<td align="center" valign="top">14</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">CCSID of the CCHAR data</td>
</tr>

<tr>
<td align="center" valign="top">24</td>
<td align="center" valign="top">18</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Offset to the exception data</td>
</tr>

<tr>
<td align="center" valign="top">28</td>
<td align="center" valign="top">1C</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">BINARY(4)</td>
<td align="left" valign="top">Length of the exception data</td>
</tr>

<tr>
<td align="center" valign="top">&nbsp;</td>
<td align="center" valign="top">&nbsp;</td>
<td align="left" valign="top">OUTPUT</td>
<td align="left" valign="top">CHAR(*)</td>
<td align="left" valign="top">Exception data</td>
</tr>
</table>

<br>
<br>
 

<h3><a name="Header_41">Field descriptions</a></h3>

<p>This topic describes the fields returned in further detail. Field
descriptions are in alphabetical order.</p>

<p><strong>Bytes available.</strong>&nbsp;&nbsp;The length of the error
information available to the API to return, in bytes. If this is 0, no error
was detected and none of the fields that follow this field in the structure are
changed.</p>

<p><strong>Bytes provided.</strong>&nbsp;&nbsp;The number of bytes that the
calling application provides for the error code. If the API caller is using
format ERRC0100, the bytes provided must be 0, 8, or more than 8. If more than
32&nbsp;783 bytes (32KB for exception data plus 16 bytes for other fields) are
specified, it is not an error, but only 32&nbsp;767 bytes (32KB) can be
returned in the exception data.</p>

<p>If the API caller is using format ERRC0200, the bytes provided must be 0,
12, or more than 12. If more than 32&nbsp;799 bytes (32KB for exception data
plus 32 bytes for other fields) are specified, it is not an error, but only
32&nbsp;767 bytes (32KB) can be returned in the exception data.</p>

<table cellpadding="5">
<tr>
<td align="left" valign="top"><em>0</em></td>
<td align="left" valign="top">If an error occurs, an exception is returned to
the application to indicate that the requested function failed.</td>
</tr>

<tr>
<td align="left" valign="top"><em>&gt;=8</em></td>
<td align="left" valign="top">If an error occurs, the space is filled in with
the exception information. No exception is returned. This only occurs if format
ERRC0100 is used.</td>
</tr>

<tr>
<td align="left" valign="top"><em>&gt;=12</em></td>
<td align="left" valign="top">If an error occurs, the space is filled in with
the exception information. No exception is returned. This only occurs if format
ERRC0200 is used.</td>
</tr>
</table>

<p><strong>CCSID of the CCHAR data.</strong>&nbsp;&nbsp;The coded character set
identifier (CCSID) of the convertible character (CCHAR) portion of the
exception data. The default is 0.</p>

<table cellpadding="5">
<tr>
<td align="left" valign="top"><em>0</em></td>
<td align="left" valign="top">The default job CCSID.</td>
</tr>

<tr>
<td align="left" valign="top"><em>CCSID</em></td>
<td align="left" valign="top">A valid CCSID number. The valid CCSID range is 1
through 65535, but not 65534.</td>
</tr>
</table>

<p><strong>Exception data.</strong>&nbsp;&nbsp;A variable-length character
field that contains the insert data associated with the exception ID.</p>

<p><strong>Exception ID.</strong>&nbsp;&nbsp;The identifier for the message for
the error condition.</p>

<p><strong>Key.</strong>&nbsp;&nbsp;The key value that enables the message
handler error function if CCHAR support is used. This value should be -1 if
CCHAR support is expected.</p>

<p><strong>Length of the exception data.</strong>&nbsp;&nbsp;The length, in
bytes, of the exception data returned in the error code.</p>

<p><strong>Offset to the exception data.</strong>&nbsp;&nbsp;The offset from
the beginning of the error code structure to the exception data in the error
code structure.</p>

<p><strong>Reserved.</strong>&nbsp;&nbsp;A 1-byte reserved field.</p>

<br>

<hr>

<br>

</body>
</html>

