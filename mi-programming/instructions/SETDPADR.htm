  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
<title> SETDPADR Instruction </title>
			<link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>
<H1>Set Data Pointer Addressability (SETDPADR)</H1>
<P>

<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">0046
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Receiver
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Source
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR></TABLE>
<P>
<I>Operand 1</I>:  Data pointer.
<P>
<I>Operand 2</I>:  Numeric variable scalar,
character variable scalar, numeric variable array, or
character variable array.
<P>
<TABLE BORDER WIDTH="100%"><TR><TH ALIGN="LEFT">Bound program access</TH><TR><TD>
<PRE>
<P>Built-in number for SETDPADR is 389.
SETDPADR (
          data_pointer           : data pointer
          space_addressability   : address
) :   data pointer /* receiver */
</PRE>
</TD></TR></TABLE>
<P>
<H5><A NAME="Header_2">Description</A></H5>
<P>
<P>
<H6><A NAME="Header_3">For non-bound programs</A></H6>
<P>
The space addressability of the object
specified for operand 2 is
assigned to the data pointer specified by operand 1.
If operand 1 contains a resolved data pointer,
the data pointer's scalar attribute component is
not changed by the instruction.  If
operand 1 contains an initialized but unresolved data pointer,
the data pointer is resolved in order
to establish the scalar attribute
component of the pointer.  If operand 1 contains other than a
resolved data pointer, the instruction
creates and returns
a data pointer in operand 1 with the addressability of the
object specified for operand 2, and the
instruction establishes the attributes
as a character(1) scalar.
<P>
<H6><A NAME="Header_4">For bound (including service) programs</A></H6>
<P>
The space addressability
specified by operand 2 is combined with attribute information from
operand 1 and returned in a data pointer.
If operand 1 contains a resolved data pointer,
the data pointer's scalar attribute component is
not changed by the instruction.  If
operand 1 contains an initialized but unresolved data pointer,
the data pointer is resolved in order
to establish the scalar attribute
component of the pointer.  If operand 1 contains other than a
resolved data pointer, the instruction
creates and returns
a data pointer with the addressability
specified by operand 2 and the attributes
of a character(1) scalar.
<P>
<H6><A NAME="Header_5">For all programs</A></H6>
<P>
When the addressability is set into a data pointer, the <I> space addressing violation&nbsp; </I> (hex <A HREF="../exceptions/EX0601.htm">0601</A>) exception
is signaled by the instruction only when the space address
to be stored in the pointer has a negative offset value or if the offset
addresses beyond the largest space allocatable
in the object.  This maximum offset value is dependent on the
size and packaging of the object containing the space and is
independent of the actual size of the space allocated.  If the exception
is signaled for this reason, the pointer
is not modified by the instruction.  Attempts to use a pointer
whose offset value lies between the currently allocated extent
of the space and the maximum allocatable extent of the space
cause the <I> space addressing violation&nbsp; </I> (hex <A HREF="../exceptions/EX0601.htm">0601</A>) exception
to be signaled.
<P>
A data pointer cannot be set to address
<font color=blue>
teraspace.
Otherwise,
</FONT>
an <I>unsupported space use&nbsp; </I>(hex <A HREF="../exceptions/EX0607.htm">0607</A>) exception is signaled.
<P>
<H4><A NAME="Header_6">Authorization Required</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_7">Lock Enforcement</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_8">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
<DD><A HREF="../exceptions/EX0604.htm">0604 External Data Object Not Found</A>
<DD><A HREF="../exceptions/EX0607.htm">0607 Unsupported Space Use</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
</DL>
</DL>

</body>

</HTML>
