  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head>
  <title> ACTPG Instruction </title>
  <link rel="stylesheet" type="text/css" href="../tstudio.css">
 </head>

<body>
<h1>Activate Program (ACTPG)</h1>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">0212
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Program or static storage frame
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Program
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR></TABLE>
<BR>
<I>Operand 1</I>:  Space pointer data object or system pointer.
<P>
<I>Operand 2</I>:  System pointer.
<BR>
<BR>
<TABLE BORDER WIDTH="100%"><TR><TH ALIGN="LEFT">Bound program access</TH><TR><TD>
<PRE>
<P>Built-in number for ACTPG is 32.
ACTPG (
       program_or_static_storage_frame   : address of system pointer OR<font color=blue>
                                           address of space pointer(16)</FONT>
       program                           : address of system pointer
)
</PRE>
</TD></TR></TABLE>
<P>
<H5><A NAME="Header_2">Warning</A></H5>
<P>
The following information is subject to change from
release to release.  Use it with caution and be
prepared to adjust for changes with each new release.
<P>
<H5><A NAME="Header_3">Description</A></H5>
<P>This instruction creates an activation entry for
the non-bound <I>program</I> specified by operand 2,
if it uses static storage.
If the <I>program</I> specified is of any other type,
an <I> invalid operation for program&nbsp; </I> (hex 2C15) exception
is signaled.
No operation is performed for a program which does not
require static storage.
<P>Operand 1 receives either a space pointer or system pointer as follows:
<UL>
<P><LI>If an activation entry is created or
an activation entry exists for the program within
the target activation group, then
a space pointer to the static storage frame is returned.
The static storage frame is allocated and initialized according
to specifications within the program.
The static storage frame is 16-byte aligned and begins
with a 64-byte header.  The header is not initialized and it is not
used by the machine.  The header
is provided for compatibility with prior machine implementations.
<P><LI>If the program does not use static storage
(hence, no activation entry is created)
a copy of the program pointer in operand 2 is returned.
</UL>
<P>If an attempt is made
to activate an already active program then
<UL COMPACT>
<LI>the activation mark of the activation entry is changed, and
<LI>the static storage frame is reinitialized
<P>When the security level machine attribute value is hex 40
and higher, if the thread state at the time
this instruction is invoked is user state
and an attempt is made to activate a system state program, an <I> invalid operation for program&nbsp; </I> (hex 2C15) exception
will be signalled.
</UL>
<P>
A space pointer machine object may not be specified for operand 1.
<P>
<H4><A NAME="Header_4">Authorization Required</A></H4>
<UL>
<P><LI>
Execute
<UL>
<P><LI>
Program referenced by operand 2
<P><LI>
Contexts referenced for address resolution
</UL>
</UL>
<P>
<H4><A NAME="Header_5">Lock Enforcement</A></H4>
<UL>
<P><LI>
Materialize
<UL>
<P><LI>Contexts referenced for address resolution
</UL>
</UL>
<P>
<H4><A NAME="Header_6">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>0A Authorization
<DL COMPACT>
<DD><A HREF="../exceptions/EX0A01.htm">0A01 Unauthorized for Operation </A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1005.htm">1005 Authority Verification Terminated Due to Damaged Object</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1A Lock State
<DL COMPACT>
<DD><A HREF="../exceptions/EX1A01.htm">1A01 Invalid Lock State</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2207.htm">2207 Authority Verification Terminated Due to Destroyed Object</A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2A Program Creation
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2AB5.htm">2AB5 Observable Information Necessary For Retranslation Not Encapsulated</A>
</DL>
<DD><P>2C Program Execution
<DL COMPACT>
<DD><A HREF="../exceptions/EX2C15.htm">2C15 Invalid Operation for Program</A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
<DD><A HREF="../exceptions/EX4402.htm">4402 Literal Values Cannot Be Changed</A>
</DL>
</DL>

</body>
</HTML>
