  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
<title> CVTFPDF Instruction </title>
			<link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>                                                 
<H1>Convert Floating-Point to Decimal Form (CVTFPDF)</H1>
<P>

<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 3
</TH><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>CVTFPDF</B>
10BF
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Decimal exponent
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Decimal significand
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Source
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>CVTFPDFR</B>
12BF
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Decimal exponent
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Decimal significand
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Source
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR></TABLE>
<P>
<I>Operand 1</I>:  Packed variable scalar or zoned variable scalar.
<P>
<I>Operand 2</I>:  Packed variable scalar or zoned variable scalar.
<P>
<I>Operand 3</I>:  Floating-point scalar.
<P>
<H5><A NAME="Header_2">Description</A></H5>
<P>
This instruction converts a binary
floating-point value to a decimal form of a
floating-point value specified by a decimal exponent and
a decimal significand, and places the
result in the <I>decimal exponent</I>
and <I>decimal significand</I> operands.
<P>
The value of this number is considered to be as follows:
<PRE>
Value = S * (10**E)
</PRE>
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><P>where:
</TD><TD><P>
<TABLE CELLPADDING="3">
<TR VALIGN="TOP"><TD><P>S =
</TD><TD><P>The value of the <I>decimal
significand</I> operand.
</TD></TR><TR VALIGN="TOP"><TD><P>E =
</TD><TD><P>The value of the <I>decimal
exponent</I> operand.
</TD></TR><TR VALIGN="TOP"><TD><P>*
</TD><TD><P>Denotes multiplication.
</TD></TR><TR VALIGN="TOP"><TD><P>**
</TD><TD><P>Denotes exponentiation.
</TD></TR></TABLE>
</TD></TR></TABLE>
The decimal exponent must be specified as a decimal integer value.  No
fractional digit positions
are allowed.  It must be specified with at least five digit
positions.  The decimal exponent
provides for containing a signed integer value specifying a
power of 10 which gives the
floating-point value its magnitude.
<P>
The decimal significand must be specified as a decimal value
with a single integer digit position
and optional fractional digit positions.  The decimal
significand provides for containing a signed
decimal value specifying decimal digit which gives the
floating-point value its precision.  The
decimal significand is formed as a normalized value, that
is, the leftmost digit position is
nonzero for a nonzero source value.
<P>
When the <I>source</I> contains a representation of a normalized
binary floating-point number with decimal
significand digits beyond the leftmost 7 digits for a short
floating-point <I>source</I> or beyond the
leftmost 15 digits for a long floating-point <I>source</I>, the
precision allowed for the binary
floating-point <I>source</I> is exceeded.
<P>
When the <I>source</I> contains a representation
of a denormalized binary
floating-point number, it may
provide less precision than the precision of a normalized
binary floating-point number, depending
on the particular source value.  Decimal significand digits
exceeding the precision of the <I>source</I>
are set as a result of the conversion to provide for uniqueness
of conversion and are correct,
except for rounding errors.  These digits are only as precise as the
floating-point calculations
that produced the source value.  The <I> floating-point inexact result&nbsp; </I> (hex <A HREF="../exceptions/EX0C0D.htm">0C0D</A>) exception
provides a means of
detecting loss of precision in floating-point calculations.
<P>
<P>
The binary floating-point source is converted to a decimal
form floating-point value and rounded to
the precision of the <I>decimal significand</I> operand as follows:
<UL>
<P><LI>
The decimal
significand is formed as a normalized value and the decimal
exponent is set accordingly.
<P><LI>
For the
nonround form of the instruction, the value to be assigned
to the decimal significand is adjusted
to the precision of the decimal significand, if necessary,
according to the current float rounding
mode in effect for the thread.  For the optional round form
of the instruction, the decimal round
algorithm is used for the precision adjustment of the decimal
significand.  The decimal round
algorithm overrides the current floating-point rounding mode
that is in effect for the thread.
<P><LI> <I>Source</I> values
which, in magnitude M, are in the range where (10**31-1) *
10**-31 &lt;= M &lt;=
(10**31-1) * 10**+31 are converted subject to the normal
rounding error defined for the
floating-point rounding modes and the optional round form
of the instruction.
<P><LI> <I>Source</I> values
which, in magnitude M, are in the range where (10**31-1) * 10**-31 &gt; M &gt;
(10**31-1) * 10**+31 are converted such that the rounding error
incurred on the conversion may
exceed that defined above.  For round to nearest and the
optional round form of the instruction,
this error will not exceed by more than .47 units in the
least significant digit position of the
result, the error that would be incurred for a correctly
rounded result.  For the other
floating-point rounding modes, this error will not exceed
1.47 units in the least significant digit
position of the result.
<P><LI>
If necessary, the
decimal exponent value is adjusted to compensate for rounding.
<P><LI>
The converted
and rounded value is then assigned
to the <I>decimal exponent</I> and <I>decimal
significand</I> operands.
</UL>
A <I> size&nbsp; </I> (hex <A HREF="../exceptions/EX0C0A.htm">0C0A</A>) exception
cannot occur on the assignment of the <I>decimal
exponent</I> or the <I>decimal significand</I> values.
<P>
<H5><A NAME="Header_3">Limitations (Subject to Change)</A></H5>
<P>
The following are limits that apply to the functions performed by this
instruction.
<P>
The result of the operation is unpredictable for any type of
overlap between the <I>decimal exponent</I>
and <I>decimal significand</I> operands.
<P>
<H4><A NAME="Header_4">Authorization Required</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_5">Lock Enforcement</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_6">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>0C Computation
<DL COMPACT>
<DD><A HREF="../exceptions/EX0C0D.htm">0C0D Floating-Point Inexact Result</A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>32 Scalar Specification
<DL COMPACT>
<DD><A HREF="../exceptions/EX3201.htm">3201 Scalar Type Invalid</A>
</DL>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
<DD><A HREF="../exceptions/EX4402.htm">4402 Literal Values Cannot Be Changed</A>
</DL>
</DL>

</body>

</HTML>
