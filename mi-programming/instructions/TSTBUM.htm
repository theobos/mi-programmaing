  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
<title> TSTBUM Instruction </title>
			<link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>
<H1>Test Bits Under Mask (TSTBUM)</H1>
<P>

<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Extender
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 3&nbsp;&#91;4, 5&#93;
</TH></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>TSTBUMB</B>
1C2A
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Source
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Mask
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>TSTBUMI</B>
182A
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Source
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Mask
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator targets
</TD></TR></TABLE>
<P>
<I>Operand 1</I>:  Character variable scalar or numeric
variable scalar.
<P>
<I>Operand 2</I>:  Character scalar or numeric scalar.
<P>
<I>Operand 3 &#91;4, 5&#93;</I>
<P>
<UL>
<P><LI>
<I>Branch Form</I>-Instruction
number, relative instruction
number, branch point, or instruction pointer.
<P><LI>
<I>Indicator Form</I>-Numeric
variable scalar or character variable scalar.
</UL>
<P>
<H5><A NAME="Header_2">Description</A></H5>
<P>
Selected bits from the leftmost byte of the <I>source</I> operand are tested to determine their bit values.
<P>
Based on the test, the resulting condition is used with the
extender field to:
<UL>
<P><LI>
Transfer control
conditionally to the instruction indicated in one of the
branch target operands (branch form).
<P><LI>
Assign a value to
each of the indicator operands (indicator form).
</UL>
The <I>source</I> and the <I>mask</I> operands can
be character or numeric.  The
leftmost
byte of each of the operands is used in the operands.  The operands are
interpreted as bit strings.
The testing is performed bit by bit with only those bits
indicated by the <I>mask</I>
operand being tested.
A 1-bit in the <I>mask</I> operand specifies that the
corresponding bit in the source value
is to be tested.  A 0-bit in the <I>mask</I> operand specifies
that the corresponding bit in the <I>source</I> value is to be ignored.
<P>
<H5><A NAME="Header_3">Resultant Conditions</A></H5>
<P>
The selected bits of the bit
string <I>source</I> operand are all zeros, all ones,
or mixed ones and zeros.
A <I>mask</I> operand of all zeros causes a zero resultant condition.
<P>
<H4><A NAME="Header_4">Authorization Required</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_5">Lock Enforcement</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_6">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2C Program Execution
<DL COMPACT>
<DD><A HREF="../exceptions/EX2C04.htm">2C04 Branch Target Invalid</A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
</DL>
</DL>

</body>

</HTML>
