  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head>
  <title> ADDN Instruction </title>
  <link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>
<h1>Add Numeric (ADDN)</h1>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Extender
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Operand 2
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Operand 3
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Operand &#91;4-7&#93;
</TH></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDN</B>
1043
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">
<BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="6"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDNR</B>
1243
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">
<BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="6"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDNI</B>
1843
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Indicator options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Indicator targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="6"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDNIR</B>
1A43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Indicator options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Indicator targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="6"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDNB</B>
1C43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Branch options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Branch targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="6"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%"><B>ADDNBR</B>
1E43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Branch options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Sum
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="17%">Branch targets
</TD></TR></TABLE>
<BR>
<I>Operand 1:</I>  Numeric variable scalar.
<P>
<I>Operand 2:</I>  Numeric scalar.
<P>
<I>Operand 3:</I>  Numeric scalar.
<P>
<I>Operand 4-7</I>:
<UL>
<P><LI>
<I>Branch Form</I>-Branch point, instruction pointer, relative
instruction number, or absolute instruction number.
<P><LI>
<I>Indicator Form</I>-Numeric variable scalar or character
variable scalar.
</UL>
<P>
<H4><A NAME="Header_2">Short forms</A></H4>
<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Extender
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand &#91;3-6&#93;
</TH></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNS</B>
1143
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">
<BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNSR</B>
1343
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">
<BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNIS</B>
1943
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNISR</B>
1B43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Indicator targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNBS</B>
1D43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch targets
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5"><hr>
</TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><B>ADDNBSR</B>
1F43
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch options
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Sum/Addend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Augend
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Branch targets
</TD></TR></TABLE>
<BR>
<I>Operand 1:</I>  Numeric variable scalar.
<P>
<I>Operand 2:</I>  Numeric scalar.
<P>
<I>Operand 3-6</I>:
<UL>
<P><LI>
<I>Branch Form</I>-Branch point, instruction pointer, relative
instruction number, or absolute instruction number.
<P><LI>
<I>Indicator Form</I>-Numeric variable scalar or character
variable scalar.
</UL>
<P>
<H5><A NAME="Header_3">Caution</A></H5>
<P>
If operands overlap but do not share all of the same bytes, results
of operations performed on these operands are not predictable.
If overlapped operands share all of the same bytes, the results are
predictable when direct addressing is
used or whenever the <I>assume coincident operand overlap</I>
attribute has been specified in the program template.
If
the <I>assume coincident operand overlap</I> attribute has not been
specified in the program template and
indirect addressing is used (that is, based operands, parameters,
strings with variable lengths, and arrays with variable subscripts),
the results are not always predictable.
<P>
<H5><A NAME="Header_4">Description</A></H5>
<P>
The <I>sum</I> is the result of adding the <I>addend</I>
and <I>augend</I>.
<P>
Operands can have floating-point, packed or zoned decimal,
signed or unsigned binary type.
<P>
Source operands are the <I>addend</I> and <I>augend.</I>
The receiver operand is the <I>sum.</I>
<P>
If operands are not of the same type, addends are converted according to
the following rules:
<OL TYPE=1>
<P><LI>If any one of the operands has floating point type, addends are
converted to floating point type.
<P><LI>Otherwise, if any one of the operands has zoned or packed decimal
type, addends are converted to packed decimal.
<P><LI>Otherwise, the binary operands are converted to a like type.
Note: unsigned binary(2) scalars are logically treated as signed
binary(4) scalars.
</OL>
<P> <I>Addend</I> and <I>augend</I> are added according to their type.
Floating point
operands are added using floating point addition.  Packed decimal
addends are added using packed decimal addition.  Unsigned binary
addition is used with unsigned addends.  Signed binary addends are added
using two's complement binary addition.
<P>
Better performance can be obtained if all operands have the same type.
Signed and unsigned binary additions execute faster than either packed
decimal or floating point additions.
<P>
Decimal operands used in floating-point operations cannot
contain more than 15 total digit positions.
<P>
For a decimal operation, alignment of the assumed decimal point
takes place by padding with 0's on the right end of the <I>addend</I> with lesser precision.
<P>
Floating-point addition uses exponent comparison and significand
addition.  Alignment of the binary
point is performed, if necessary, by shifting the significand of
the value with the smaller
exponent to the right.  The exponent is increased by one for each
binary digit shifted until the two exponents agree.
<P>
The operation uses the lengths and the precision of the source
and receiver operands to calculate
accurate results.
Operations performed in decimal are limited to 31 decimal digits in
the intermediate result.
<P>
The addition operation is performed according to the rules of algebra.
<P>
The result of the operation is copied into the <I>sum</I> operand.
If this operand is not the same type as that used in performing
the operation, the resultant value is converted to its type.
If necessary, the resultant value is adjusted to the length of
the <I>sum,</I>
aligned at the assumed decimal point of the <I>sum</I> operand, or both
before being copied.
Length adjustment and decimal point alignment are performed
according to the rules of arithmetic operations outlined in the
<A class="content" HREF="../MCNPFAO.htm">Arithmetic Operations.</A>
If nonzero digits
are truncated on the left end of the resultant value, a <I> size&nbsp; </I> (hex 0C0A) exception
is signaled.
<P>
When the target of the instruction is signed or unsigned binary size,
exceptions can be suppressed.
<P>
For the optional round form of the instruction, specification of a
floating-point receiver operand is invalid.
<P>
For fixed-point operations, if nonzero digits are truncated off
the left end of the resultant
value, a <I> size&nbsp; </I> (hex 0C0A) exception
is signaled.
<P>
For floating-point operations involving a fixed-point receiver
field, if nonzero digits would be
truncated off the left end of the resultant value, an <I> invalid floating-point conversion&nbsp; </I> (hex 0C0C) exception
is signaled.
<P>
For a floating-point sum, if the exponent of the resultant value
is either too large or too small
to be represented in the sum field, the <I> floating-point overflow&nbsp; </I> (hex 0C06) exception
and <I> floating-point underflow&nbsp; </I> (hex 0C07) exception
are signaled, respectively.
<P>
If a decimal to binary conversion causes a <I> size&nbsp; </I> (hex 0C0A) exception
to be
signaled, the binary value contains the correct truncated
result only if the decimal value contains 15 or fewer significant
nonfractional digits.
<P>
<H5><A NAME="Header_5">Resultant Conditions</A></H5>
<UL>
<P><LI>Positive - The
algebraic value of the numeric scalar
sum operand is positive.
<P><LI>Negative - The
algebraic value of the numeric scalar
sum operand is negative.
<P><LI>Zero - The
algebraic value of the numeric scalar
sum operand is zero.
<P><LI>Unordered - The
value assigned a floating-point sum operand is NaN.
</UL>
<P>
<H4><A NAME="Header_6">Authorization Required</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_7">Lock Enforcement</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_8">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>0C Computation
<DL COMPACT>
<DD><A HREF="../exceptions/EX0C02.htm">0C02 Decimal Data </A>
<DD><A HREF="../exceptions/EX0C03.htm">0C03 Decimal Point Alignment</A>
<DD><A HREF="../exceptions/EX0C06.htm">0C06 Floating-Point Overflow </A>
<DD><A HREF="../exceptions/EX0C07.htm">0C07 Floating-Point Underflow </A>
<DD><A HREF="../exceptions/EX0C09.htm">0C09 Floating-Point Invalid Operand </A>
<DD><A HREF="../exceptions/EX0C0A.htm">0C0A Size</A>
<DD><A HREF="../exceptions/EX0C0C.htm">0C0C Invalid Floating-Point Conversion</A>
<DD><A HREF="../exceptions/EX0C0D.htm">0C0D Floating-Point Inexact Result</A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2C Program Execution
<DL COMPACT>
<DD><A HREF="../exceptions/EX2C04.htm">2C04 Branch Target Invalid</A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
<DD><A HREF="../exceptions/EX4402.htm">4402 Literal Values Cannot Be Changed</A>
</DL>
</DL>
</body>
</HTML>

