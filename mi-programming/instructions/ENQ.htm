  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
<title> ENQ Instruction </title>
			<link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>
<H1>Enqueue (ENQ)</H1>
<P>

<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 3
</TH><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">036B
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Queue
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Message prefix
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Message text
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR></TABLE>
<P>
<I>Operand 1</I>:  System pointer.
<P>
<I>Operand 2</I>:  Character scalar.
<P>
<I>Operand 3</I>:  Space pointer.
<P>
<TABLE BORDER WIDTH="100%"><TR><TH ALIGN="LEFT">Bound program access</TH><TR><TD>
<PRE>
<P>Built-in number for ENQ is 43.
ENQ (
     queue            : address of system pointer
     message_prefix   : address
     message_text     : address
)
</PRE>
</TD></TR></TABLE>
<P>
<H5><A NAME="Header_2">Description</A></H5>
<P>
A message is enqueued according to the <I>queue type</I> attribute
specified during the queue's creation.
<P>
If <I>keyed</I> sequence is specified, enqueued messages are
sequenced in ascending binary collating order according to
the key value.  If a message to be enqueued
has a key value equal to an existing enqueued
key value, the message being added is enqueued following the existing
message.
<P>
If the queue was defined with either <I>last in, first out (LIFO)</I>
or <I>first
in, first out (FIFO)</I> sequencing, then enqueued messages are ordered
chronologically with the latest enqueued message being
either first on the queue or last on the queue, respectively.
A key can be provided and associated with messages enqueued in a LIFO
or FIFO queue; however, the key does not establish
a message's position in the queue.  The key can contain pointers, but the
pointers are not considered to be
pointers when they are placed on the queue by an Enqueue instruction.
<P>
Operand 1 specifies the <I>queue</I> to which
a message is to be enqueued.
Operand 2 specifies the <I>message prefix</I>,
and operand 3 specifies the <I>message text</I>.
<P>
The format of the <I>message prefix</I> is as follows:
<BR>
<TABLE>
<TR>
<TH ALIGN="CENTER" VALIGN="TOP" COLSPAN="2">Offset
</TH><TH ALIGN="CENTER" VALIGN="TOP" COLSPAN="12"><BR></TH></TR><TR>
<TH ALIGN="RIGHT" VALIGN="TOP">Dec
</TH><TH ALIGN="RIGHT" VALIGN="TOP">Hex
</TH><TH ALIGN="LEFT" VALIGN="TOP">
<BR></TH><TH ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Field Name
</TH><TH ALIGN="LEFT" VALIGN="TOP">
<BR></TH><TH ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Data Type and Length
</TH></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">0
</TD><TD ALIGN="RIGHT" VALIGN="TOP">0
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Size of message to be enqueued
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Bin(4)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">4
</TD><TD ALIGN="RIGHT" VALIGN="TOP">4
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Enqueue key value (ignored for FIFO/LIFO queues
with key lengths equal to 0)
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">Char(key length)
</TD></TR><TR>
<TD ALIGN="RIGHT" VALIGN="TOP">*
</TD><TD ALIGN="RIGHT" VALIGN="TOP">*
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">--- End ---
</TD><TD ALIGN="LEFT" VALIGN="TOP">
<BR></TD><TD ALIGN="LEFT" VALIGN="TOP" COLSPAN="5">
<BR></TD></TR></TABLE>
<P>
The <B><U>size of message to be enqueued</U></B>
is supplied to inform the machine
of the number of bytes in the space that are to be
considered <I>message text</I>.  The
size of the message is then considered the
lesser of the <I>size of message to be enqueued</I> attribute
and the <I>maximum
message size</I> specified on queue creation.  The <I>message
text</I> can contain
pointers.  When pointers are in <I>message text</I>, the
operand 3 space pointer must be
16-byte aligned.  Improper alignment will result in an
exception being signaled.
<P>
If the enqueued message causes the number of messages
to exceed the maximum
number of messages attribute of the queue, one of the following occurs:
<UL>
<P><LI>
If the queue is not extendable, or if the maximum number of extends
specified by the user at queue creation has been reached, then the <I> queue full&nbsp; </I> (hex <A HREF="../exceptions/EX2602.htm">2602</A>) exception
is signaled.
The message is not enqueued.
<P><LI>
If the queue is extendable, the queue
is implicitly extended by the <I>extension value</I> attribute.  The
message is enqueued.  No exception
is signaled.
</UL>
<P>
<H5><A NAME="Header_3">Limitations (Subject to Change)</A></H5>
<P>The maximum allowable queue size, including all messages
currently enqueued and the machine overhead, is
2 gigabytes.
<P>
<H4><A NAME="Header_4">Authorization Required</A></H4>
<UL>
<P><LI>
Insert
<UL>
<P><LI>
Operand 1
</UL>
<P><LI>Execute
<UL>
<P><LI>
Contexts referenced for address resolution
</UL>
</UL>
<P>
<H4><A NAME="Header_5">Lock Enforcement</A></H4>
<UL>
<P><LI>
Materialize
<UL>
<P><LI>Contexts referenced for address resolution
</UL>
</UL>
<P>
<P>
<H4><A NAME="Header_6">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>0A Authorization
<DL COMPACT>
<DD><A HREF="../exceptions/EX0A01.htm">0A01 Unauthorized for Operation </A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1005.htm">1005 Authority Verification Terminated Due to Damaged Object</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>1A Lock State
<DL COMPACT>
<DD><A HREF="../exceptions/EX1A01.htm">1A01 Invalid Lock State</A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
<DD><A HREF="../exceptions/EX1C04.htm">1C04 Object Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2207.htm">2207 Authority Verification Terminated Due to Destroyed Object</A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
<DD> <A HREF="../exceptions/EX2403.htm">2403 Pointer Addressing Invalid Object Type</A>
</DL>
<DD><P>26 Process Management
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2602.htm">2602 Queue Full</A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<font color=blue>
<DD><P>30 Journal
<DL COMPACT>
<DD><A HREF="../exceptions/EX3002.htm">3002 Entry Not Journaled</A>
</DL>
</FONT>
<DD><P>36 Space Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX3601.htm">3601 Space Extension/Truncation</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
<DD><A HREF="../exceptions/EX4402.htm">4402 Literal Values Cannot Be Changed</A>
</DL>
</DL>

</body>

</HTML>
