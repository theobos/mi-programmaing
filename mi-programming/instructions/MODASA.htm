  <!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
  <head>
<title> MODASA Instruction </title>
			<link rel="stylesheet" type="text/css" href="../tstudio.css">
</head>

<body>
<H1>Modify Automatic Storage Allocation (MODASA)</H1>
<P>
<BR>
<TABLE>
<TR>
<TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Op Code (Hex)
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 1
</TH><TH ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Operand 2
</TH><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR><TR>
<TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">02F2
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Storage allocation
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%">Modification size
</TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD><TD ALIGN="LEFT" VALIGN="TOP" WIDTH="20%"><BR></TD></TR></TABLE>
<P>
<I>Operand 1</I>:  Space pointer data object or null.
<P>
<I>Operand 2</I>:  Signed binary scalar.
<P>
<TABLE BORDER WIDTH="100%"><TR><TH ALIGN="LEFT">Bound program access</TH><TR><TD>
<PRE>
<P>Built-in number for MODASA is 159.
MODASA (
        modification_size   : signed binary(4) OR
                              unsigned binary(4)<font color=blue>
) :   space pointer(16) to a storage allocation </FONT>
</PRE>
<P>where 0&nbsp;&lt;&nbsp;<VAR>modification size</VAR>&nbsp;&lt;&#61;&nbsp;16,773,119.
<PRE>
 
<B>-- OR --</B>
 
<P>Built-in number for MODASA2 is 397.
<font color=blue>
<A NAME="modasa2"></A>
<B>MX translator only</B>
</FONT>
 
MODASA2 (
         modification_size   : signed binary(4) OR
                               unsigned binary(4)<font color=blue>
) :   space pointer(16) to a storage allocation
</FONT>
</PRE>
<P>where
-16,773,119&nbsp;&lt;&#61;&nbsp;<VAR>modification size</VAR>&nbsp;&lt;&#61;&nbsp;16,773,119
for signed binary values and
0&nbsp;&lt;&#61;&nbsp;<VAR>modification size</VAR>&nbsp;&lt;&#61;&nbsp;16,773,119
for unsigned binary values.
<P>The <VAR>modification size</VAR> operand corresponds to operand 2
on the MODASA operation; the return value corresponds to
operand 1.
</PRE>
</TD></TR></TABLE>
<P>
<H5><A NAME="Header_2">Description</A></H5>
<P>
The automatic storage frame (ASF)
of the current invocation
is extended or truncated by the <I>modification
size</I> specified by operand 2.
A positive value indicates that the frame
is to be extended; a negative
value indicates that the frame is to be
truncated;
a zero value does not change the ASF.
If operand 1 is not null, it will be treated as follows:
<UL>
<P><LI>ASF extension: receives the address of the first byte of
the extension.  The ASF extension might not be contiguous with
the remainder of the ASF allocation.
<P><LI>ASF truncation: operand 1 should be null for truncation.  If
operand 1 is not null, then
addressability to the first byte of the
deallocated space is returned.  This value should not be used
as a space pointer since it locates space that has been
deallocated.
<P><LI>If a value of zero is specified for operand 2:  the value returned is
unpredictable.
</UL>
<P>When the ASF is extended, the extension is aligned on a
16-byte boundary.  An extension is not initialized.
<P>A <I> scalar value invalid&nbsp;</I> (hex <A HREF="../exceptions/EX3203.htm">3203</A>) exception is signaled if
the truncation amount would include the storage for all automatic
data objects
for the current invocation, including the initial allocation.
<P>
A space pointer machine object cannot be specified for operand 1.
<P>
<H4><A NAME="Header_3">Authorization Required</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_4">Lock Enforcement</A></H4>
<UL>
<P><LI>None
</UL>
<P>
<H4><A NAME="Header_5">Exceptions</A></H4>
<DL>
<DD><P>06 Addressing
<DL COMPACT>
<DD><A HREF="../exceptions/EX0601.htm">0601 Space Addressing Violation</A>
<DD><A HREF="../exceptions/EX0602.htm">0602 Boundary Alignment</A>
<DD><A HREF="../exceptions/EX0603.htm">0603 Range</A>
</DL>
<DD><P>08 Argument/Parameter
<DL COMPACT>
<DD><A HREF="../exceptions/EX0801.htm">0801 Parameter Reference Violation</A>
</DL>
<DD><P>10 Damage Encountered
<DL COMPACT>
<DD><A HREF="../exceptions/EX1004.htm">1004 System Object Damage State</A>
<DD><A HREF="../exceptions/EX1044.htm">1044 Partial System Object Damage</A>
</DL>
<DD><P>16 Exception Management
<DL COMPACT>
<DD><A HREF="../exceptions/EX1604.htm">1604 Retry/Resume Invalid </A>
</DL>
<DD><P>1C Machine-Dependent
<DL COMPACT>
<DD><A HREF="../exceptions/EX1C03.htm">1C03 Machine Storage Limit Exceeded</A>
</DL>
<DD><P>20 Machine Support
<DL COMPACT>
<DD><A HREF="../exceptions/EX2002.htm">2002 Machine Check</A>
<DD><A HREF="../exceptions/EX2003.htm">2003 Function Check</A>
</DL>
<DD><P>22 Object Access
<DL COMPACT>
<DD><A HREF="../exceptions/EX2201.htm">2201 Object Not Found </A>
<DD><A HREF="../exceptions/EX2202.htm">2202 Object Destroyed </A>
<DD><A HREF="../exceptions/EX2203.htm">2203 Object Suspended </A>
<DD><A HREF="../exceptions/EX2208.htm">2208 Object Compressed </A>
</DL>
<DD><P>24 Pointer Specification
<DL COMPACT>
<DD> <A HREF="../exceptions/EX2401.htm">2401 Pointer Does Not Exist</A>
<DD> <A HREF="../exceptions/EX2402.htm">2402 Pointer Type Invalid </A>
</DL>
<DD><P>2C Program Execution
<DL COMPACT>
<DD><A HREF="../exceptions/EX2C1D.htm">2C1D Automatic Storage Overflow </A>
</DL>
<DD><P>2E Resource Control Limit
<DL COMPACT>
<DD><A HREF="../exceptions/EX2E01.htm">2E01 User Profile Storage Limit Exceeded</A>
</DL>
<DD><P>32 Scalar Specification
<DL COMPACT>
<DD><A HREF="../exceptions/EX3201.htm">3201 Scalar Type Invalid</A>
<DD><A HREF="../exceptions/EX3202.htm">3202 Scalar Attributes Invalid</A>
<DD><A HREF="../exceptions/EX3203.htm">3203 Scalar Value Invalid</A>
</DL>
<DD><P>44 Protection Violation
<DL COMPACT>
<DD><A HREF="../exceptions/EX4401.htm">4401 Object Domain or Hardware Storage Protection Violation</A>
<DD><A HREF="../exceptions/EX4402.htm">4402 Literal Values Cannot Be Changed</A>
</DL>
</DL>

</body>

</HTML>
